Status: New grad
Position: Graduate SDE I at Amazon (AWS Aurora)
Location: Dublin

3 rounds:
Leadership principles (1 hour):


ROUND 1: Interview with the team manager.
    - Short introduction and 3 questions to cover 3 LP:
    - Tell me about a time you had to deep dive.
    - Tell me about a time you received negative feedback. What was your reaction?
    - Customer obsession (I don't remember the question)


ROUND 2: Technical interview (1 hour):

    - Short introduction  
    - 2 coding problems:
        -Q1: You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.
        Merge all the linked-lists into one sorted linked-list and return it.

        Example 1:
            Input: lists = [[1,4,5],[1,3,4],[2,6]]
            Output: [1,1,2,3,4,4,5,6]
            Explanation: The linked-lists are:
            [
            1->4->5,
            1->3->4,
            2->6
            ]
            merging them into one sorted list:
            1->1->2->3->4->4->5->6 
        [https://leetcode.com/problems/merge-k-sorted-lists/description/] but the input were k log files, and 
        I had to merge the logs by timestamp (had to be formatted).

        - Q2: Given a service that returns the series watched in Prime Video by the users in the last x hours, 
        find the most streamed series in the last x hours. The service returned a list of objects with userID, 
        titleID and timestamp. Basically I had to call the service, count the number of occurrences for each 
        titleID in the collection of objects and return the one that had the highest value (if there were more 
        than one title with the highest value, returned them all).


ROUND 3: Behavioural and technical interview (1 hour):
    - Short introduction and 1 / 2 LP (I can't remember, but deliver results was asked).
    - 1 Coding problem:
        Given a string s formatted like foo=bar hello=world ..., create a function that parses the string and 
        stores the values in a data structure. Had to consider edge cases (no '=', multiples '=', empty param name, 
        empty value, ...). After that, the interviewer told me to add a second parameter (dict) that contains the data 
        types for each param. Had to consider additional test cases (invalid type conversion, invalid type, param does 
        not appear in the dict, ...).

----------------------------------------------------------------------------------------------------------------

Round 1 :(60 mins)

- 1st question was related to heaps. I explained my non heap approach coded it. He asked me to improve the time complexity, 
I took 2 mins to think and gave the approach with the improved TC which used heap and coded it.

- 2nd question was also about heaps, my 1st apporach was slow. He asked me to improve it and I again took a few mins to 
came up with a better answer. I coded it and did a dry run, caught a few bug while dry running and fixed it. He asked 
the TC for the improved approach and I gave a wrong answer then he ask me to explain him how does a heap works, while 
explaining I realised I gave the wrong TC and I corrected it.


Round 2 : (60 mins , but got over in 45)

Not much to say here, it was 5 LP questions which I answered.


Round 3 : (60 mins)

First 30 mins were LP's.

I think I screwd up this question. After LP he asked me to design a class to calculate the price of pizza and the price of 
pizza depended upon the size, type of crust and the toppings selected. I didnt really practice OOPs a lot. I would try to 
do thing a certain way but there were quite a few moments where he said "Can we do this in a certain/better way". Every 
time he said that I would sort of understand what he wanted me to do and I would change my approach accordingly and he 
seemed to be happy with it. I did finally finish the code but he did gave me hints. In the middle of this question I wanted 
1 class to inherit another class but I forgot the syntax and I told him that. He cross questioned me and asked why I wanted 
to do inheritance and how does it work. I explained it and then he gave me the syntax.

Aditionally I think he wanted to ask me 2 questions (not sure about this) but time ran out, he gave me 5 mins to ask him 
questions and the interview ended.